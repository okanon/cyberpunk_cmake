# CMAKE_REDSCRIPT_CREATE_SHARED_LIBRARY
# CMAKE_REDSCRIPT_CREATE_SHARED_MODULE
# CMAKE_REDSCRIPT_CREATE_STATIC_LIBRARY
# CMAKE_REDSCRIPT_COMPILE_OBJECT
# CMAKE_REDSCRIPT_LINK_EXECUTABLE

# message(STATUS "REDSCRIPTInformation")

# set(CMAKE_BUILD_TYPE_INIT Debug)

# set(CMAKE_REDSCRIPT_OUTPUT_EXTENSION ".reds")

# SET(BUILD_SHARED_LIBS OFF)

include(CMakeLanguageInformation)

set(CMAKE_REDSCRIPT_OUTPUT_EXTENSION .reds)
set(CMAKE_REDSCRIPT_OUTPUT_EXTENSION_REPLACE 1)
# set(CMAKE_EXECUTABLE_SUFFIX_REDSCRIPT ".redscripts")
set(CMAKE_SHARED_LIBRARY_SUFFIX_REDSCRIPT ".redscripts")
set(CMAKE_STATIC_LIBRARY_SUFFIX_REDSCRIPT ".reds")
set(CMAKE_SHARED_MODULE_SUFFIX_REDSCRIPT ".redscripts")

set(CMAKE_REDSCRIPT_LINK_LIBRARY_USING_REDSCRIPTS_SUPPORTED TRUE)
set(CMAKE_REDSCRIPT_LINK_LIBRARY_USING_REDSCRIPTS "-s <LIBRARY> ")

set(CMAKE_REDSCRIPT_COMPILER_ARG1 "")
# set(CMAKE_REDSCRIPT_DEFINE_FLAG -s)
set(CMAKE_INCLUDE_FLAG_REDSCRIPT "-s ")
set(CMAKE_INCLUDE_FLAG_Swift "-s ")
set(CMAKE_INCLUDE_SYSTEM_FLAG_REDSCRIPT "-s ")
set(CMAKE_REDSCRIPT_LIBRARY_PATH_FLAG "-s ")
set(CMAKE_REDSCRIPT_LINK_LIBRARY_FLAG "-s ")
set(CMAKE_SHARED_LIBRARY_REDSCRIPT_FLAGS  "-s ")
set(CMAKE_STATIC_LIBRARY_REDSCRIPT_FLAGS  "-s ")
set(CMAKE_REDSCRIPT_LINKER_WRAPPER_FLAG "-s ")
set(CMAKE_REDSCRIPT_LINKER_WRAPPER_FLAG_SEP " -s ")
set(CMAKE_REDSCRIPT_OBJECT_FLAG_SEP " -s ")

# set(CMAKE_REDSCRIPT_FLAGS_INIT "$ENV{REDSCRIPTFLAGS} ${CMAKE_REDSCRIPT_FLAGS_INIT}")
# set(CMAKE_REDSCRIPT_SHARED_LINKER_FLAGS_INIT ${CMAKE_REDSCRIPT_SHARED_LINKER_FLAGS_INIT})
set(CMAKE_REDSCRIPT_LINK_FLAGS_INIT "")
set(CMAKE_REDSCRIPT_STATIC_LINKER_FLAGS_INIT "")

cmake_initialize_per_config_variable(CMAKE_REDSCRIPT_FLAGS "Flags used by REDSCRIPT")
cmake_initialize_per_config_variable(CMAKE_REDSCRIPT_SHARED_LINKER_FLAGS "Flags used by REDSCRIPT")
cmake_initialize_per_config_variable(CMAKE_REDSCRIPT_STATIC_LINKER_FLAGS "Flags used by REDSCRIPT")
cmake_initialize_per_config_variable(CMAKE_REDSCRIPT_LINK_FLAGS "Flags used by REDSCRIPT")

include(CMakeCommonLanguageInclude)

# if(CMAKE_GENERATOR STREQUAL "Visual Studio")


message(STATUS, "AAAAAAA ${CMAKE_REDSCRIPT_COMPILE_OBJECT}")

if(NOT CMAKE_REDSCRIPT_COMPILE_OBJECT)
    set(CMAKE_REDSCRIPT_COMPILE_OBJECT 
        "<CMAKE_COMMAND> -E copy_if_different <SOURCE> <OBJECT>"
        # "echo <INCLUDES>"
        # "true"
    )
endif()

if(NOT CMAKE_Swift_CREATE_STATIC_LIBRARY)
    if(DEFINED CMAKE_CI_BUILD)
        set(CMAKE_Swift_CREATE_STATIC_LIBRARY
            "<CMAKE_COMMAND> -D COMMENT_SLUG=\"//\" -D GLOB_EXT=\"reds\" -D HEADER_FILE=\"${MOD_HEADER_TXT_FILE}\" -D PACKED_FILE=<TARGET> -D SEARCH_FOLDER=${MOD_REDSCRIPT_DIR} -P ${CYBERPUNK_CMAKE_SCRIPTS}/PackFiles.cmake"
            "<CMAKE_COMMAND> -E copy_if_different <TARGET> ${MOD_GAME_DIR_PACKED_FILE}"
        )
    else()
        set(CMAKE_Swift_CREATE_STATIC_LIBRARY
            "<CMAKE_REDSCRIPT_COMPILER> lint <INCLUDES> -b \"${CYBERPUNK_2077_REDSCRIPT_BACKUP}\""
            "<CMAKE_COMMAND> -D COMMENT_SLUG=\"//\" -D GLOB_EXT=\"reds\" -D HEADER_FILE=\"${MOD_HEADER_TXT_FILE}\" -D PACKED_FILE=<TARGET> -D SEARCH_FOLDER=${MOD_REDSCRIPT_DIR} -P ${CYBERPUNK_CMAKE_SCRIPTS}/PackFiles.cmake"
            "<CMAKE_COMMAND> -E copy_if_different <TARGET> ${MOD_GAME_DIR_PACKED_FILE}"
        )
    endif()


    message(STATUS, "BBBBB ${CMAKE_Swift_CREATE_STATIC_LIBRARY}")
endif()

if(NOT CMAKE_Swift_CREATE_SHARED_MODULE)
    if(DEFINED CMAKE_CI_BUILD)
        set(CMAKE_Swift_CREATE_SHARED_MODULE
            "<CMAKE_COMMAND> -E copy_if_different <SWIFT_SOURCES> ${MOD_GAME_DIR_MODULE_FILE}"
        )
    else()
        set(CMAKE_Swift_CREATE_SHARED_MODULE
            "<CMAKE_REDSCRIPT_COMPILER> lint -s <SWIFT_SOURCES> <INCLUDES> -b \"${CYBERPUNK_2077_REDSCRIPT_BACKUP}\""
            "<CMAKE_COMMAND> -E copy_if_different <SWIFT_SOURCES> ${MOD_GAME_DIR_MODULE_FILE}"
        )
    endif()
endif()

set(CMAKE_REDSCRIPT_INFORMATION_LOADED 1)
